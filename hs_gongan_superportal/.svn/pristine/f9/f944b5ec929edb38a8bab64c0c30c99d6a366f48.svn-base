	package com.mininglamp.controller;

import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;

import com.mininglamp.model.Result;
import com.mininglamp.pojo.User;
import com.mininglamp.pojo.UserLogin;
import com.mininglamp.service.IExcelUtilService;
import com.mininglamp.service.IUserService;
import com.mininglamp.util.CachFactory;
import com.mininglamp.util.Constants;
import com.mininglamp.util.PageSupport;
import com.mininglamp.vo.UserRoleVo;

@Controller
@RequestMapping("/user")
public class UserController {
	@Resource
	private IUserService userService;
	
	@Resource
	private IExcelUtilService excelUtilService;
	
	
	//查询籍贯信息	
	@SuppressWarnings("unchecked")
	@ResponseBody
	@RequestMapping("/findJgList")
	public Map<String, Object> findJgList(){ 
		return (Map<String, Object>) CachFactory.getInstance().getMapByKey(Constants.DICT).get(Constants.TB_D_JG);
	}
	
	//查询民族
	@SuppressWarnings("unchecked")
	@ResponseBody
	@RequestMapping("/findMzList")
	public Map<String, Object> findMzList(){ 
		return (Map<String, Object>) CachFactory.getInstance().getMapByKey(Constants.DICT).get(Constants.TB_D_MZ);
	}
	
	
	
	// 政治面貌
	@SuppressWarnings("unchecked")
	@ResponseBody
	@RequestMapping("/findZzmmList")
	public Map<String, Object> findZzmmList() {
		return (Map<String, Object>) CachFactory.getInstance().getMapByKey(Constants.DICT).get(Constants.TB_D_ZZMM);
	}
	
	// 工作单位
	@SuppressWarnings("unchecked")
	@ResponseBody
	@RequestMapping("/findGzdwdmList")
	public Map<String, Object> findGzdwdmList() {
		return (Map<String, Object>) CachFactory.getInstance().getMapByKey(Constants.DICT).get(Constants.TB_D_GZDWDM);
	}
	

	//职务名称
	@SuppressWarnings("unchecked")
	@ResponseBody
	@RequestMapping("/findZwmcList")
	public Map<String, Object> findZwmcList() {
		return (Map<String, Object>) CachFactory.getInstance().getMapByKey(Constants.DICT).get(Constants.TB_D_ZWMC);
	}
	
	// 职务名称
	@SuppressWarnings("unchecked")
	@ResponseBody
	@RequestMapping("/findJyyxList")
	public Map<String, Object> findJyyxList() {
		return (Map<String, Object>) CachFactory.getInstance().getMapByKey(Constants.DICT).get(Constants.TB_D_JYYX);
	}
	
	
	
	
	@RequestMapping("/showUser")
	public String toIndex(PageSupport pageSupport,Model model){
		pageSupport = userService.findPageUsers(pageSupport);
		model.addAttribute("pageSupport", pageSupport);
		return "user/showUser";
	}
	
	/**
	 * 添加用户
	 */
	@ResponseBody
	@RequestMapping("/addUser")
	public Result addUser(HttpServletRequest request){
		Result result = userService.addUser(request);
		return result;  
	}
	


	/**
	 * 批量添加用户
	 * @param excelFile
	 * @return
	 */
	@RequestMapping("/addUsers")
	public String addUsers(@RequestParam("excelFile")MultipartFile excelFile){
		userService.addUsers(excelFile);
		return "redirect:showUser";
	}
	
	/**
	 * 更新用户信息
	 * @param excelFile
	 * @return
	 */
	@ResponseBody  
	@RequestMapping("/updateUser")
	public Result updateUser(HttpServletRequest request ){
		return userService.updateUser(request);
	}
	
	/**
	 * 删除用户
	 * @param user
	 * @return
	 */
	@ResponseBody  
	@RequestMapping("/deleteUser")
	public Result deleteUser(HttpServletRequest request ){
		Integer userId  = Integer.parseInt(request.getParameter("userId"));
		return userService.deleteUser(userId);
	}
	
	
	
	
	@ResponseBody  
	@RequestMapping("/findUser")
	public User findUser(HttpServletRequest request){
		Integer userId =Integer.parseInt(request.getParameter("userId")) ;
		return userService.findUser(userId);
	}
	
	
	

	/**
	 * 打开添加用户页面
	 * @param request
	 * @return
	 */
	@RequestMapping("/showRole")
	public String showRole(HttpServletRequest request,Model model){
		model.addAttribute("userId", request.getParameter("userId"));
		return "user/showRole";
	}
	
	
	/**
	 * 系统选择
	 * @param request
	 * @param model
	 * @return
	 */
	@RequestMapping("/systemTree")
	public String systemTree(HttpServletRequest request,Model model){
		Map<String, Object> systemMap = (Map<String, Object>) CachFactory.getInstance().getMapByKey(Constants.DICT).get(Constants.TB_SYS_SYSTEM);
		model.addAttribute("systemMap", systemMap);
		model.addAttribute("userId", request.getParameter("userId"));
		return "user/systemTree";
	}
	
	

	/**
	 * 系统对应的权限信息
	 * @param request
	 * @param model
	 * @return
	 */
	@RequestMapping("/subRole")
	public String subRole(HttpServletRequest request,Model model){
		return "user/subRole";
	}
	
	/**
	 *查询用户角色信息
	 * @param request
	 * @param model
	 * @return
	 */
	@RequestMapping("/showSubRole")
	public String showSubRole(HttpServletRequest request,Model model){
		List<UserRoleVo> userRoleVos = userService.findUserRoleVos(request);
		model.addAttribute("userRoleVos", userRoleVos);
		model.addAttribute("userId", request.getParameter("userId"));
		return "user/subRole";
	}
	
	/**
	 * 提交用户权限
	 * @param request
	 * @param model
	 * @return
	 */
	@ResponseBody
	@RequestMapping("/submitUserRole")
	public Result submitUserRole(HttpServletRequest request,Model model){
		Result result = userService.submitUserRole(request);
		return result;
	}
	

	/**
	 * 获得session中的user信息
	 * @param request
	 * @return
	 */
	@ResponseBody
	@RequestMapping("/getSessionUser")
	public UserLogin getSessionUser(HttpServletRequest request) {
		return (UserLogin) request.getSession().getAttribute("user");
	}
}
